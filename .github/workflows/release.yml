name: Create Release with Library

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Build and Release Library
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-linux-gnu
        
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential pkg-config libssl-dev
        
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: '.'
        
    - name: Build library
      run: cargo build --release
      
    - name: Run tests
      run: cargo test --lib
      
    - name: Create release notes
      run: |
        cat > release_notes.md << EOF
        # Redis HTTP Module ${{ steps.version.outputs.VERSION }}
        
        ## ðŸ“¦ Library
        - **File**: \`libredis_http.so\`
        - **Architecture**: Ubuntu x86_64
        - **Size**: $(ls -lh target/release/libredis_http.so | awk '{print $5}')
        - **Compatibility**: Ubuntu 18.04+ (x86_64)
        
        ## ðŸš€ Quick Installation
        
        \`\`\`bash
        # Download the library
        wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/libredis_http.so
        
        # Copy to Redis modules directory
        sudo cp libredis_http.so /usr/lib/redis/modules/
        
        # Add to redis.conf
        echo "loadmodule /usr/lib/redis/modules/libredis_http.so" | sudo tee -a /etc/redis/redis.conf
        
        # Restart Redis
        sudo systemctl restart redis
        
        # Test the installation
        curl -u ":" http://localhost:4887/GET/test
        \`\`\`
        
        ## ðŸ“‹ Features
        - **HTTP API**: GET, POST, PUT, DELETE operations via HTTP
        - **Hash Operations**: HGET, HGETALL, HSET via HTTP endpoints
        - **Multiple Formats**: JSON, XML, Plain Text responses
        - **Authentication**: Basic HTTP authentication with Redis credentials
        - **Auto-start**: HTTP server automatically starts on port 4887
        
        ## ðŸ”§ Requirements
        - **Redis**: 6.0 or higher
        - **OS**: Ubuntu 18.04+ (x86_64 only)
        - **Dependencies**: OpenSSL library
        
        ## ðŸ“š Usage Examples
        
        ### Set and Get Data
        \`\`\`bash
        # Set data via Redis CLI
        redis-cli SET user:123 '{"name":"John","email":"john@example.com"}'
        
        # Get data via HTTP
        curl -u ":" http://localhost:4887/GET/user:123
        \`\`\`
        
        ### Hash Operations
        \`\`\`bash
        # Set hash data
        redis-cli HSET profile:123 name "John Doe" email "john@example.com"
        
        # Get hash field
        curl -u ":" http://localhost:4887/MGET/profile:123/name
        
        # Get all hash fields
        curl -u ":" http://localhost:4887/MGETALL/profile:123
        \`\`\`
        
        ### Different Response Formats
        \`\`\`bash
        # JSON (default)
        curl -u ":" http://localhost:4887/GET/user:123
        
        # XML
        curl -H "Accept: application/xml" -u ":" http://localhost:4887/GET/user:123
        
        # Plain Text
        curl -H "Accept: text/plain" -u ":" http://localhost:4887/GET/user:123
        \`\`\`
        
        ## ðŸ”— Links
        - [Full Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
        - [Testing Guide](https://github.com/${{ github.repository }}/blob/main/TESTING.md)
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Redis HTTP Module ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: target/release/libredis_http.so
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload to release
      run: |
        echo "Release created successfully!"
        echo "Download link: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}"